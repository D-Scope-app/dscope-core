name: Indexer to Public API

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/indexer.yml"

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout dscope-core
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      # валидация приватного ключа (как у тебя в hardhat.config.ts)
      - name: Validate WALLET_PRIVATE_KEY (length check)
        shell: bash
        run: |
          KEY="${{ secrets.WALLET_PRIVATE_KEY }}"
          if [ -z "$KEY" ]; then
            echo "::error::Missing repo secret WALLET_PRIVATE_KEY"; exit 1
          fi
          L=${#KEY}
          if [ "$L" -ne 66 ]; then
            echo "::error::WALLET_PRIVATE_KEY must be 66 chars (0x + 64 hex). Got $L"; exit 1
          fi
          echo "Private key format looks OK."

      # B) дописываем переменные ещё и в .env (dotenv их подхватит)
      - name: Create .env for Hardhat (ZKSYNC_RPC + WALLET_PRIVATE_KEY)
        shell: bash
        run: |
          {
            echo "ZKSYNC_RPC=https://sepolia.era.zksync.dev";
            echo "WALLET_PRIVATE_KEY=${{ secrets.WALLET_PRIVATE_KEY }}";
            # для индексатора:
            echo "RPC_URL=https://sepolia.era.zksync.dev";
            echo "FACTORY_ADDRESS=0x2e1b2155e8731fafed4e4352a963281bba73f3d0";
            echo "START_BLOCK=5640000";
          } > .env
          echo ".env created"

      # A) дублируем переменные env на шаг — подстраховка
      - name: Run indexer (build JSON)
        shell: bash
        env:
          RPC_URL: https://sepolia.era.zksync.dev
          FACTORY_ADDRESS: 0x2e1b2155e8731fafed4e4352a963281bba73f3d0
          START_BLOCK: "5640000"
        run: |
          set -e
          node -e "const fs=require('fs');fs.mkdirSync('public/api',{recursive:true});"
          npx ts-node backend/ci-indexer.ts
          ls -lah public/api || true

      - name: Push to dscope-api (publish static API)
        if: always()
        shell: bash
        env:
          GHT_TOKEN: ${{ secrets.PUBLIC_API_PAT }}
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          rm -rf public-repo
          git clone "https://x-access-token:${GHT_TOKEN}@github.com/D-Scope-app/dscope-api.git" public-repo

          mkdir -p public-repo/api
          cp -r public/api/* public-repo/api/ || true

          # создаём простую главную страницу, если её ещё нет
          if [ ! -f public-repo/index.html ]; then
            cat > public-repo/index.html <<'HTML'
<!doctype html>
<meta charset="utf-8"><title>D-Scope API</title>
<body style="font-family:system-ui,Arial,sans-serif;max-width:860px;margin:40px auto;padding:0 16px">
  <h1>D‑Scope API</h1>
  <p>
    <a href="./api/surveys.json">api/surveys.json</a> •
    <a href="./api/surveys.list.json">api/surveys.list.json</a>
  </p>
</body>
HTML
          fi

          cd public-repo
          git add .
          git commit -m "update: static API" || echo "no changes"
          git push origin HEAD:main
